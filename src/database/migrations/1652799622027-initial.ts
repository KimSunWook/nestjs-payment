import {MigrationInterface, QueryRunner} from "typeorm";

export class initial1652799622027 implements MigrationInterface {
    name = 'initial1652799622027'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "buyers" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "user_id" character varying NOT NULL, "userId" uuid, CONSTRAINT "REL_545e00f05d8af4c162fc52c889" UNIQUE ("userId"), CONSTRAINT "PK_aff372821d05bac04a18ff8eb87" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "payments" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "seller_id" uuid NOT NULL, "buyer_id" uuid NOT NULL, "imp_uid" character varying, "merchant_uid" character varying, "pay_method" character varying, "channel" character varying, "pg_provider" character varying, "emb_pg_provider" character varying, "pg_tid" character varying, "pg_id" character varying, "escrow" boolean, "apply_num" character varying, "bank_code" character varying, "bank_name" character varying, "card_code" character varying, "card_name" character varying, "card_quota" integer, "card_number" character varying, "card_type" character varying, "vbank_code" character varying, "vbank_name" character varying, "vbank_num" character varying, "vbank_holder" character varying, "vbank_date" integer, "vbank_issued_at" integer, "name" character varying, "amount" integer, "cancel_amount" integer, "currency" character varying, "buyer_name" character varying, "buyer_email" character varying, "buyer_tel" character varying, "buyer_addr" character varying, "buyer_postcode" character varying, "custom_data" character varying, "user_agent" character varying, "status" character varying, "started_at" integer, "paid_at" integer, "failed_at" integer, "cancelled_at" integer, "fail_reason" character varying, "cancel_reason" character varying, "receipt_url" character varying, "cash_receipt_issued" boolean, "customer_uid" character varying, "customer_uid_usage" character varying, "sellerId" uuid, "buyerId" uuid, CONSTRAINT "PK_197ab7af18c93fbb0c9b28b4a59" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "sellers" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "user_id" character varying NOT NULL, "userId" uuid, CONSTRAINT "REL_4c1c59db4ac1ed90a1a7c0ff3d" UNIQUE ("userId"), CONSTRAINT "PK_97337ccbf692c58e6c7682de8a2" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."users_role_enum" AS ENUM('USER', 'ADMIN')`);
        await queryRunner.query(`CREATE TABLE "users" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "role" "public"."users_role_enum" NOT NULL DEFAULT 'USER', "nemo_id" integer, CONSTRAINT "UQ_752b94dc8ac16c936e909d25f97" UNIQUE ("nemo_id"), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "payment_cancels" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_e69cada5657941d36a1c18d55d8" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "payment_prepares" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "merchant_uid" character varying, "amount" integer, CONSTRAINT "PK_2a2953071a8f7fbbf849512d72f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "seller_id"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "buyer_id"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "imp_uid"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "merchant_uid"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "pay_method"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "channel"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "pg_provider"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "emb_pg_provider"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "pg_tid"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "pg_id"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "escrow"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "apply_num"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "bank_code"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "bank_name"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "card_code"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "card_name"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "card_quota"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "card_number"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "card_type"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "vbank_code"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "vbank_name"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "vbank_num"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "vbank_holder"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "vbank_date"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "vbank_issued_at"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "amount"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "cancel_amount"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "currency"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "buyer_name"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "buyer_email"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "buyer_tel"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "buyer_addr"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "buyer_postcode"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "custom_data"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "user_agent"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "status"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "started_at"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "paid_at"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "failed_at"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "cancelled_at"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "fail_reason"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "cancel_reason"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "receipt_url"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "cash_receipt_issued"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "customer_uid_usage"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "sellerId"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "buyerId"`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "seller_id" uuid NOT NULL`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "buyer_id" uuid NOT NULL`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "imp_uid" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "merchant_uid" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "pay_method" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "channel" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "pg_provider" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "emb_pg_provider" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "pg_tid" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "pg_id" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "escrow" boolean`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "apply_num" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "bank_code" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "bank_name" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "card_code" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "card_name" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "card_quota" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "card_number" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "card_type" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "vbank_code" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "vbank_name" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "vbank_num" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "vbank_holder" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "vbank_date" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "vbank_issued_at" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "name" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "amount" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "cancel_amount" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "currency" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "buyer_name" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "buyer_email" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "buyer_tel" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "buyer_addr" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "buyer_postcode" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "custom_data" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "user_agent" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "status" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "started_at" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "paid_at" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "failed_at" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "cancelled_at" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "fail_reason" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "cancel_reason" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "receipt_url" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "cash_receipt_issued" boolean`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "customer_uid_usage" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "sellerId" uuid`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "buyerId" uuid`);
        await queryRunner.query(`ALTER TABLE "buyers" ADD CONSTRAINT "FK_545e00f05d8af4c162fc52c8892" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payments" ADD CONSTRAINT "FK_6c7400b18d7d9a09f8d3ef153df" FOREIGN KEY ("sellerId") REFERENCES "sellers"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payments" ADD CONSTRAINT "FK_123f88f31437a6eec5f78d39b2a" FOREIGN KEY ("buyerId") REFERENCES "buyers"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "sellers" ADD CONSTRAINT "FK_4c1c59db4ac1ed90a1a7c0ff3df" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "sellers" DROP CONSTRAINT "FK_4c1c59db4ac1ed90a1a7c0ff3df"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP CONSTRAINT "FK_123f88f31437a6eec5f78d39b2a"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP CONSTRAINT "FK_6c7400b18d7d9a09f8d3ef153df"`);
        await queryRunner.query(`ALTER TABLE "buyers" DROP CONSTRAINT "FK_545e00f05d8af4c162fc52c8892"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "buyerId"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "sellerId"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "customer_uid_usage"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "cash_receipt_issued"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "receipt_url"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "cancel_reason"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "fail_reason"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "cancelled_at"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "failed_at"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "paid_at"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "started_at"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "status"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "user_agent"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "custom_data"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "buyer_postcode"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "buyer_addr"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "buyer_tel"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "buyer_email"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "buyer_name"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "currency"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "cancel_amount"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "amount"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "vbank_issued_at"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "vbank_date"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "vbank_holder"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "vbank_num"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "vbank_name"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "vbank_code"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "card_type"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "card_number"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "card_quota"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "card_name"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "card_code"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "bank_name"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "bank_code"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "apply_num"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "escrow"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "pg_id"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "pg_tid"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "emb_pg_provider"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "pg_provider"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "channel"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "pay_method"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "merchant_uid"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "imp_uid"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "buyer_id"`);
        await queryRunner.query(`ALTER TABLE "payments" DROP COLUMN "seller_id"`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "buyerId" uuid`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "sellerId" uuid`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "customer_uid_usage" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "cash_receipt_issued" boolean`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "receipt_url" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "cancel_reason" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "fail_reason" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "cancelled_at" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "failed_at" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "paid_at" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "started_at" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "status" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "user_agent" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "custom_data" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "buyer_postcode" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "buyer_addr" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "buyer_tel" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "buyer_email" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "buyer_name" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "currency" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "cancel_amount" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "amount" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "name" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "vbank_issued_at" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "vbank_date" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "vbank_holder" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "vbank_num" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "vbank_name" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "vbank_code" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "card_type" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "card_number" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "card_quota" integer`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "card_name" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "card_code" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "bank_name" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "bank_code" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "apply_num" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "escrow" boolean`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "pg_id" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "pg_tid" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "emb_pg_provider" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "pg_provider" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "channel" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "pay_method" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "merchant_uid" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "imp_uid" character varying`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "buyer_id" uuid NOT NULL`);
        await queryRunner.query(`ALTER TABLE "payments" ADD "seller_id" uuid NOT NULL`);
        await queryRunner.query(`DROP TABLE "payment_prepares"`);
        await queryRunner.query(`DROP TABLE "payment_cancels"`);
        await queryRunner.query(`DROP TABLE "users"`);
        await queryRunner.query(`DROP TYPE "public"."users_role_enum"`);
        await queryRunner.query(`DROP TABLE "sellers"`);
        await queryRunner.query(`DROP TABLE "payments"`);
        await queryRunner.query(`DROP TABLE "buyers"`);
    }

}
